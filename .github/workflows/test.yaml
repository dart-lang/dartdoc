name: Test

on:
  # Run CI on pushes to the main branch, and on PRs against main.
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: 0 15 * * *

# Declare default permissions as read only.
permissions: read-all

env:
  PUB_ENVIRONMENT: bot.github

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        sdk: [3.6.0, dev]
        job: [main, flutter, packages, sdk-docs]
        include:
          - os: macos-latest
            sdk: dev
            job: main
          - os: windows-latest
            sdk: dev
            job: main
        exclude:
            # Do not try to run flutter against the "stable" sdk,
            # it is unlikely to work and produces uninteresting
            # results.
          - sdk: 3.6.0
            job: flutter
          - sdk: 3.6.0
            job: sdk-docs

    steps:
      - name: Store date
        id: date
        run: echo "name=today::$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
        shell: bash
      - name: Cache clean flutter
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a
        if: matrix.job == 'flutter'
        env:
          # Increment version to invalidate bad/obsolete caches.
          cache-name: cache-grinder-flutter-v1
        with:
          path: ~/.dartdoc_grinder
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ steps.date.outputs.today }}
      - name: Cache .pub-cache
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a
        if: matrix.job == 'flutter'
        env:
          # Increment version to invalidate bad/obsolete caches.
          cache-name: cache-dart-pub-v1
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ steps.date.outputs.today }}
      - name: Configure git
        if: runner.os == 'Windows'
        run: git config --global core.autocrlf input
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - uses: dart-lang/setup-dart@e630b99d28a3b71860378cafdc2a067c71107f94
        with:
          sdk: ${{ matrix.sdk }}
      - name: Install dependencies
        run: dart pub get
      - name: ${{ matrix.job }}
        if: runner.os != 'Windows'
        run: ./tool/ci.sh
        env:
          DARTDOC_BOT: ${{ matrix.job }}
      - name: ${{ matrix.job }}
        if: runner.os == 'Windows' && matrix.job == 'main'
        run: dart run tool\task.dart buildbot
        env:
          DARTDOC_BOT: ${{ matrix.job }}
